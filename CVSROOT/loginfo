# The "loginfo" file controls where "cvs commit" log information
# is sent.  The first entry on a line is a regular expression which must match
# the directory that the change is being made to, relative to the
# $CVSROOT.  If a match is found, then the remainder of the line is a filter
# program that should expect log information on its standard input.
#
# If the repository name does not match any of the regular expressions in this
# file, the "DEFAULT" line is used, if it is specified.
#
# If the name ALL appears as a regular expression it is always used
# in addition to the first matching regex or DEFAULT.
#
# You may specify a format string as part of the
# filter.  The string is composed of a `%' followed
# by a single format character, or followed by a set of format
# characters surrounded by `{' and `}' as separators.  The format
# characters are:
#
#   s = file name
#   V = old version number (pre-checkin)
#   v = new version number (post-checkin)
#
# For example:
#DEFAULT (echo ""; id; echo %s; date; cat) >> $CVSROOT/CVSROOT/commitlog
# or
#DEFAULT (echo ""; id; echo %{sVv}; date; cat) >> $CVSROOT/CVSROOT/commitlog

#
# Changes to CVSROOT go to the Admins
#
CVSROOT (echo ""; id; echo %{sv}; date; cat) | mail -s "updates to MusicKit CVSROOT" leigh@tomandandy.com

# The syncmail way of doing things.
#CVSROOT $CVSROOT/CVSROOT/syncmail %{sv} leigh@tomandandy.com 

#
# Changes to MusicKit or SndKit are mailled to the musickit-developers list
# This is how I have done things traditionally without syncmail
#
MusicKit (echo ""; id; echo %{sv}; date; cat) | mail -s "updates to MusicKit" musickit-developers@lists.sourceforge.net
SndKit (echo ""; id; echo %{sv}; date; cat) | mail -s "updates to SndKit" musickit-developers@lists.sourceforge.net

#
# This is the syncmail way of doing things
#
#MusicKit $CVSROOT/CVSROOT/syncmail %{sv} musickit-developers@lists.sourceforge.net
#SndKit $CVSROOT/CVSROOT/syncmail %{sv} musickit-developers@lists.sourceforge.net
