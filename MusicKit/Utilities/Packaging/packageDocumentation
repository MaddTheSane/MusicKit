#!/bin/sh
# $Id$
#
# Usage: packageDocumentation [ChangeLog] [Directory for README.pdf]
#
# Create a set of HTML pages from the SGML documentation suitable for
# distribution on the web-site. We do this with a customised stylesheet (in DSSSL)
# to produce the correct text colouring, background images etc.
#
# Also creates HTML pages of class documentation from header files
# using HeaderDoc and copies in PDF's of documentation.
# The entire tree of documentation is then packaged up suitable for
# shipping to a webserver.
#
# Leigh Smith <leigh@leighsmith.com>
#

JADE=openjade

# HTML_DISTRIB_DIR makes it easier to install into SourceForge.
HTML_DISTRIB_DIR=htdocs
HTML_TMPDIR=/tmp/$HTML_DISTRIB_DIR
HTML_TARBALL=/tmp/MusicKitREADME.tar.bz2

PDF_TMPDIR=/tmp/mkpdf
PDF_OUTDIR=/tmp/generatedPDFs

# Assume we are standing at the top of the source tree, since with NFS
# it's a bit hard to be universal with paths.
MKSRCDIR=`pwd`
MKDOCDIR=$MKSRCDIR/Documentation

MKCONCEPTS=$MKDOCDIR/Concepts/
MKTUTORIALS=$MKDOCDIR/TutorialClasses/
MKPUBLICATIONS=$MKDOCDIR/Publications/
MKHEADERDOC=$MKDOCDIR/HeaderDoc/
MK_STYLEDIR=$MKDOCDIR/SGML
MK_STYLESHEET=$MK_STYLEDIR/MusicKit_README.dsssl

MKREADME_STYLESHEET=$MK_STYLESHEET
MKCONCEPTS_STYLESHEET=$MK_STYLESHEET
MKTUTORIALS_STYLESHEET=$MK_STYLESHEET

READMESRC=MusicKit_README.sgml

# We allow the path to the ChangeLog to be passed in so it can be
# posted onto the web for inspection.
CHANGELOG=$1

# We specify where we want the README.pdf file to be copied into when
# we drive the packaging of the documentation from the packageSource script.
COPYREADMETO=$2

#
# This is where the standard admonition images reside. This is set for
# where fink installs Norman Walsh's images as part of his DocBook
# DSSSL distribution.
#
ADMONIMAGESDIR=/sw/share/sgml/dsssl/docbook-dsssl-nwalsh/images

#
# Create HTML from the supplied DocBook SGML file
#
generateHTML()
{
    SGMLFILE=$1
    STYLESHEET=$2
    IMAGESDIR=$3
    WRITEHTMLTODIR=$4

    BASENAME=`basename $SGMLFILE .sgml`

    mkdir -p $HTML_TMPDIR/$WRITEHTMLTODIR/Images
    cd $HTML_TMPDIR/$WRITEHTMLTODIR
    cp -r $IMAGESDIR/Images/*.{gif,jpg,png} Images
    cp -r $ADMONIMAGESDIR/*.gif Images
    $JADE -t sgml -ihtml -d ${STYLESHEET}\#html $SGMLFILE
    echo HTML of ${BASENAME}.sgml generated into $HTML_TMPDIR/$WRITEHTMLTODIR
}

#
# Create PDF from the supplied DocBook SGML file
#
generatePDF()
{
    SGMLFILE=$1
    STYLESHEET=$2
    IMAGESDIR=$3
    WRITEPDFTODIR=$4

    BASENAME=`basename $SGMLFILE .sgml`
    TEXINPUT=${BASENAME}.tex
    DVIINTERMEDIARY=${BASENAME}.dvi
    PDFFINAL=${BASENAME}.pdf

    cd $PDF_TMPDIR 
    mkdir -p Images
    cp $IMAGESDIR/Images/*.eps Images
    cp $ADMONIMAGESDIR/*.eps Images
    $JADE -t tex -d ${STYLESHEET}\#print -o $TEXINPUT $SGMLFILE
    jadetex $TEXINPUT
    jadetex $TEXINPUT
    dvips -o prepared.ps $DVIINTERMEDIARY
    ps2pdf prepared.ps $WRITEPDFTODIR/$PDFFINAL
    echo PDF of ${BASENAME}.sgml generated into $WRITEPDFTODIR/$PDFFINAL
}

generateAllFormats()
{
    #
    # Convert SGML to HTML
    #
    generateHTML $1 $2 $3 $4
    #
    # Convert SGML to PDF
    #
    generatePDF $1 $2 $3 $PDF_OUTDIR
}

#
# Blow away any old versions
#
rm -rf $HTML_TMPDIR $PDF_TMPDIR $PDF_OUTDIR
mkdir -p $PDF_TMPDIR $PDF_OUTDIR

#
# Generate the README documentation
#
generateAllFormats $MKDOCDIR/$READMESRC $MKREADME_STYLESHEET $MK_STYLEDIR .

#
# Generate the Concepts Book underneath the README directory, so it
# can be referenced by URL independent of the README directory.
#
generateAllFormats $MKCONCEPTS/MusicKitConcepts.sgml $MKCONCEPTS_STYLESHEET $MKCONCEPTS MusicKitConcepts

#
# Generate the tutorials and also place them under the README directory.
#
generateAllFormats $MKTUTORIALS/MusicKitTutorials.sgml $MKTUTORIALS_STYLESHEET $MKTUTORIALS TutorialClasses

#
# Remove the temp PDF build area.
#
rm -r $PDF_TMPDIR

#
# Run HeaderDoc over the frameworks
#
mkdir $HTML_TMPDIR/Frameworks
cat > $HTML_TMPDIR/Frameworks/index.html <<EOF
<HTML>
<!-- This file has been automatically generated by packageDocumentation, do not edit  -->
<HEAD><TITLE>MusicKit and SndKit Documented Frameworks</TITLE></HEAD>
<BODY bgcolor="#442643" text="#FFFFFF" link="#C7DE1E" alink="#969FF4" vlink="#80C2E2"> 
<center><H1>MusicKit and SndKit Documented Frameworks</H1></center>
EOF

cd $MKHEADERDOC
# The MacOS X version of the MKPerformSndMIDI framework is the 
# definitive documentation version.
FRAMEWORKS_TO_HEADERDOC="$MKSRCDIR/Frameworks/MusicKit \
    $MKSRCDIR/Frameworks/SndKit \
    $MKSRCDIR/Frameworks/MKSynthPatches \
    $MKSRCDIR/Frameworks/MKUnitGenerators \
    $MKSRCDIR/Frameworks/PlatformDependent/MKPerformSndMIDI_MacOSX \
    $MKSRCDIR/Frameworks/PlatformDependent/MKPerformSndMIDI_portaudio"

for frameworkDir in $FRAMEWORKS_TO_HEADERDOC; do (
    FRAMEWORK_NAME=`basename $frameworkDir`
    FRAMEWORK_DOC_OUT_DIR=$HTML_TMPDIR/Frameworks/$FRAMEWORK_NAME
    headerdoc2html -o $FRAMEWORK_DOC_OUT_DIR $frameworkDir
    # gatherheaderdoc -p "$FRAMEWORK_NAME" $FRAMEWORK_DOC_OUT_DIR
    gatherheaderdoc $FRAMEWORK_DOC_OUT_DIR
    echo "<a href=$FRAMEWORK_NAME>$FRAMEWORK_NAME</a><p>" >> $HTML_TMPDIR/Frameworks/index.html
    # Gatherheaderdoc generates a file MasterTOC.html, that we make the
    # default file. We change into the directory so we create relative symlinks.
    cd $FRAMEWORK_DOC_OUT_DIR
    ln -s MasterTOC.html index.html
); 
done

cat >> $HTML_TMPDIR/Frameworks/index.html <<EOF
<p>
<a href=..>Back to main documentation page</a>
</body>
</html>
EOF

# Copy images to appear in the class documentation into each respective class.
mkdir $HTML_TMPDIR/Frameworks/MKSynthPatches/Images
cp $MKSRCDIR/Documentation/Frameworks/SynthPatches/Reference/Classes/Images/*.png $HTML_TMPDIR/Frameworks/MKSynthPatches/Images

#
# If we specified a changelog on the command line, copy it into the
# web directory.
#
if [ ${CHANGELOG}_x != _x ]; then
    cp $CHANGELOG $HTML_TMPDIR
fi

#
# Copy all PDFs to be placed on the web-site, both those prepared
# beforehand and those generated by this script.
#
mkdir -p $HTML_TMPDIR/Publications
cp $MKPUBLICATIONS/*.pdf $HTML_TMPDIR/Publications
cp $PDF_OUTDIR/*.pdf $HTML_TMPDIR

#
# If the user specified a location to additionally copy the README
# file to, we copy it there. It will typically be the source code
# packaging directory.
# 
if [ ${COPYREADMETO}_x != _x ]; then
    READMEPDF=`basename $READMESRC .sgml`.pdf
    cp $PDF_OUTDIR/$READMEPDF $COPYREADMETO
fi

#
# Now create a tarball
#
cd /tmp
tar cjf $HTML_TARBALL $HTML_DISTRIB_DIR
echo MusicKit README HTML pages packaged into $HTML_TARBALL

#
# And clean up
#
rm -r $PDF_OUTDIR $HTML_TMPDIR

