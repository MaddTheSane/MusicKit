#!/bin/sh
# $Id$
#
# zsh Script to automate the packaging of binaries of the MusicKit frameworks,
# applications, commands and libraries ready for user deployment.
#
# Taken from an article on Stepwise:
# http://www.stepwise.com/Articles/Technical/Packages/BuildingAPackage.html
#
# Leigh Smith <leigh@leighsmith.com> 1999/11/29
#
DISTNAME=MusicKit
FRAMEWORKNAME=MK
PACKAGETITLE="MusicKit and SndKit Applications and Frameworks"
# This allows us to have a different default CVSROOT
FRAMEWORKCVSROOT=:ext:leighsmith@cvs.sourceforge.net:/cvsroot/musickit
WORKINGDIR=/tmp
DISTCHECKEDOUTSRCLOC=/tmp/MKSRC

# Where to install into, for now we assume the location on the
# development machine is the same as on the target installation machine.
INSTALL_FILE_DIR=$WORKINGDIR/${FRAMEWORKNAME}Install
INSTALLROOT=/

case `uname` in
    "Darwin")
	OS_ACRONYM=MOX
	;;
    "Rhapsody")
	OS_ACRONYM=MOXS
	;;
    *)
	echo "Error: unsupported operating system `uname`"
	exit 1;
	;;
esac

if [ x_$1 = x_ ]; then
    echo "Usage: $0 version_number"
    echo "where version_number = V.R.P"
    exit 1;
else
    RELEASE=$1
fi

CVSTAG=${DISTNAME}_`echo $RELEASE | tr '.' '-'`

# Clean out anything already there.
rm -r -f $INSTALL_FILE_DIR

# Remove any dynamic libraries that the Frameworks will link to
# so they link to the static libraries instead.
# Eventually figure out how to force static linking of these.
sudo rm -f /usr/local/lib/{libmp3hip,libsndfile,libmp3lame,libshout,libvorbis,libogg}.*dylib

# Check out the source tree
echo Checking out $CVSTAG to $DISTCHECKEDOUTSRCLOC
mkdir -p $DISTCHECKEDOUTSRCLOC
cd $DISTCHECKEDOUTSRCLOC
cvs -d $FRAMEWORKCVSROOT -Q checkout -r $CVSTAG $DISTNAME

# build the system
cd $DISTCHECKEDOUTSRCLOC
autoconf
./configure
sudo make install DSTROOT=$INSTALL_FILE_DIR

# This is the point where you'll want to make sure that the
# permissions and ownership of the files and directories in your
# application are set to the appropriate values. The goal is to set
# all the files to the user-id that you'd expect when they are
# installed by the root user, in most cases you'll want to set the
# ownership to root. Installations by those other than root will
# correctly default to the installer's user-id. The situation with
# respect to permissions is much simpler, since they'll be consistent
# regardless of which user does the installation. To accomplish this,
# you'll need to be logged in as root.

/bin/chmod -R ugo-w $INSTALL_FILE_DIR/
/bin/chmod -R ugo+rX $INSTALL_FILE_DIR/

# we make the INSTALL_FILE_DIR user writable otherwise the installer
# will set the parent directory the application is stored into read-only which
# stops a second reinstall.
/bin/chmod -R u+w $INSTALL_FILE_DIR/

echo "Changing ownership to root.wheel, log in for sudo."
sudo /usr/sbin/chown -R root:wheel $INSTALL_FILE_DIR/

#  The .info file is in a basic key/value format. The keys that are
#  commonly used are defined below, a more complete list of keys is
#  available in the Yellow Box release notes
#  (file:/System/Documentation/Developer/YellowBox/ReleaseNotes/CreatingPackages.html).
#
#  The Title, Version and Description keys are the values displayed in
#  the Installer.app user interface. All are single line strings,
#  including Description.
#
#  The DefaultLocation key is the destination directory where the
#  contents of the package will be installed. This can be changed by
#  the user if the Relocatable key is set to YES.
#
#  Some packages should only be installed as root, and those packages
#  will have NeedsAuthorization set to YES. If there is no requirement
#  to be root, you can set this key to NO.
#
#  If the package is an application, set the Application key to YES,
#  otherwise to No. If you do not want your package contents to be
#  deletable from Installer.app, set InstallOnly to YES. Finally, in
#  most cases, you will want to allow the installation of a package to
#  be stopped during the process. There are cases where that may not
#  be wise (if your application has a packageName.pre_install script
#  for example), and in those cases you'll want to set the DisableStop
#  to YES, otherwise it should be set to NO.

cat > $FRAMEWORKNAME.info << EOF
Title                $PACKAGETITLE
Version              $RELEASE
Description          This package contains frameworks for the $PACKAGETITLE.
DefaultLocation      $INSTALLROOT
Relocatable          YES
Diskname             $FRAMEWORKNAME #%d
NeedsAuthorization   YES
Application          NO
InstallOnly          NO
DisableStop          NO
RequiresReboot       NO
InstallFat           NO
EOF

# perhaps use DeleteWarning

# If we want the old fashioned (and safer!) way.
# PackageMaker $INSTALL_FILE_DIR $FRAMEWORKNAME.info -gnutar
PackageMaker -build -f $INSTALL_FILE_DIR -i $FRAMEWORKNAME.info

# -d $INSTALLROOT

# just tar the file ready for transmission, no point compressing.
SHIPFILE=$WORKINGDIR/$FRAMEWORKNAME-$RELEASE.b.$OS_ACRONYM.pkg.tar
tar cf $SHIPFILE $FRAMEWORKNAME.pkg

echo "Deleting temporary files, log in for sudo."
sudo /bin/rm -r -f $INSTALL_FILE_DIR

rm -r -f $WORKINGDIR/$FRAMEWORKNAME.pkg
rm $FRAMEWORKNAME.info

echo "Finished. Final package is located at $SHIPFILE"

