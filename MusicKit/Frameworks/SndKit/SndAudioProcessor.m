////////////////////////////////////////////////////////////////////////////////
//
//  SndAudioProcessor.m
//  SndKit
//
//  Created by skot on Tue Mar 27 2001. <skot@tomandandy.com>
//  Copyright (c) 2001 tomandandy music inc.
//
//  Permission is granted to use and modify this code for commercial and non-commercial
//  purposes so long as the author attribution and copyright messages remain intact and
//  accompany all relevant code.
//
////////////////////////////////////////////////////////////////////////////////

#import "SndAudioProcessor.h"
#import "SndAudioBuffer.h"

@implementation SndAudioProcessor

////////////////////////////////////////////////////////////////////////////////
// 
////////////////////////////////////////////////////////////////////////////////

+ audioProcessor
{
    SndAudioProcessor *pAP = [[SndAudioProcessor alloc] init];
    return [pAP autorelease];
}

////////////////////////////////////////////////////////////////////////////////
// 
////////////////////////////////////////////////////////////////////////////////

- init
{
    [super init];
    numParams = 0;
    return self;
}

////////////////////////////////////////////////////////////////////////////////
// 
////////////////////////////////////////////////////////////////////////////////

- setNumParams: (int) c
{
    numParams = c;
    return self;
}

////////////////////////////////////////////////////////////////////////////////
// 
////////////////////////////////////////////////////////////////////////////////

- reset
{
    return self;
}

////////////////////////////////////////////////////////////////////////////////
// 
////////////////////////////////////////////////////////////////////////////////

- (int) paramCount
{
    return numParams;
}

////////////////////////////////////////////////////////////////////////////////
// 
////////////////////////////////////////////////////////////////////////////////

- (float) paramValue: (int) index
{
    return 0.0f;
}

////////////////////////////////////////////////////////////////////////////////
// 
////////////////////////////////////////////////////////////////////////////////

- (NSString*) paramName: (int) index
{
    return @"<none>";
}

////////////////////////////////////////////////////////////////////////////////
// 
////////////////////////////////////////////////////////////////////////////////

- setParam: (int) index toValue: (float) v
{
/*
    switch (index) {
        case kYourParamKeys:
            YourParams = v;
            break;
    }
*/    
    return self;
}

////////////////////////////////////////////////////////////////////////////////
// 
////////////////////////////////////////////////////////////////////////////////

- processReplacingInputBuffer: (SndAudioBuffer*) inB 
                 outputBuffer: (SndAudioBuffer*) outB
{
    // no processing? copy data!
    // remember to check bActive in derived classes.
    [outB copyData: inB];
    return self;
}

////////////////////////////////////////////////////////////////////////////////

@end
